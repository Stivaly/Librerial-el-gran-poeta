{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport axios from 'axios';\nconst librosPorPagina = 8;\nexport default {\n  __name: 'Home',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let lastId = 0;\n    const mostrarFormulario = ref(false);\n    const ocultarFormulario = mostrarFormulario.value = false;\n    const lnombre = ref('');\n    const lpaginas = ref('');\n    const leditorial = ref('');\n    const lautor = ref('');\n    const lfecha = ref('');\n    const lisbn = ref('');\n    const lidioma = ref('');\n    const lgenero = ref('');\n    const libros = ref([]);\n    const paginaActual = ref(1);\n    const mostrarResumen = ref(true);\n    const obtenerLibros = async () => {\n      const baseURL = '/api/home/';\n      try {\n        const response = await axios.get(baseURL);\n        return response.data;\n      } catch (error) {\n        console.log('Error al obtener libros:', error);\n        throw error;\n      }\n    };\n    const cargarLibros = async () => {\n      try {\n        const librosObtenidos = await obtenerLibros();\n        libros.value = librosObtenidos;\n        if (librosObtenidos.length > 0) {\n          lastId = librosObtenidos[librosObtenidos.length - 1].id;\n        }\n      } catch (error) {\n        console.log('Error al cargar libros:', error);\n      }\n    };\n    onMounted(() => {\n      cargarLibros();\n    });\n    const librosPaginados = computed(() => {\n      const inicio = (paginaActual.value - 1) * librosPorPagina;\n      const fin = paginaActual.value * librosPorPagina;\n      return libros.value.slice(inicio, fin);\n    });\n    const truncate = (text, length) => {\n      if (text) {\n        return text.length > length ? text.substring(0, length) + '...' : text;\n      } else {\n        return '';\n      }\n    };\n    const totalPaginas = computed(() => Math.ceil(libros.value.length / librosPorPagina));\n    const handleSubmit = async () => {\n      if (!lnombre.value || !leditorial.value || !lpaginas.value || !lfecha.value || !lisbn.value || !lidioma.value || !lautor.value || !lgenero.value) {\n        alert('Ingrese todos los campos');\n        return;\n      }\n      const nuevoLibro = {\n        id: lastId + 1,\n        libro_nombre: lnombre.value,\n        libro_numpaginas: lpaginas.value,\n        editorial: {\n          id_editorial: leditorial.value,\n          editorial: leditorial.options[leditorial.selectedIndex].text\n        },\n        autor: {\n          id_autor: lautor.value,\n          nombre_autor: lautor.options[lautor.selectedIndex].text,\n          pais: {\n            id_pais: lautor.options[lautor.selectedIndex].dataset.paisId,\n            pais: lautor.options[lautor.selectedIndex].dataset.paisNombre,\n            latitud: lautor.options[lautor.selectedIndex].dataset.paisLatitud,\n            longitud: lautor.options[lautor.selectedIndex].dataset.paisLongitud\n          },\n          autor_genero: lautor.options[lautor.selectedIndex].dataset.genero,\n          autor_rating_promedio: lautor.options[lautor.selectedIndex].dataset.ratingPromedio,\n          cantidad_rating_autor: lautor.options[lautor.selectedIndex].dataset.cantidadRating,\n          cantidad_comentarios: lautor.options[lautor.selectedIndex].dataset.cantidadComentarios\n        },\n        idioma: {\n          id_idioma: lidioma.value,\n          idioma: lidioma.options[lidioma.selectedIndex].text\n        },\n        libro_fecha_publicacion: lfecha.value,\n        libro_rating_promedio: 0,\n        libro_review_counts: 0,\n        libro_ISBN: lisbn.value,\n        id_editorial: leditorial.value,\n        id_autor: lautor.value,\n        id_idioma: lidioma.value,\n        id_genero: lgenero.value\n      };\n      try {\n        const baseURL = `/api/agregar/${id}`;\n        const response = await axios.post(baseURL, nuevoLibro);\n        if (response.status === 201) {\n          alert('Libro guardado exitosamente');\n          libros.value.push(nuevoLibro);\n          mostrarFormulario.value = false;\n          lnombre.value = '';\n          lpaginas.value = '';\n          leditorial.value = '';\n          lautor.value = '';\n          lfecha.value = '';\n          lidioma.value = '';\n          lresumen.value = '';\n        }\n        // Ajustar la página actual para mostrar el nuevo libro si está en una nueva página\n        if (libros.value.length > paginaActual.value * librosPorPagina) {\n          paginaActual.value = totalPaginas.value;\n        }\n      } catch (error) {\n        console.error('Error al guardar el libro:', error);\n        alert('Ocurrió un error al guardar el libro. Por favor, inténtelo de nuevo.');\n      }\n    };\n    const toggleColumnas = () => {\n      mostrarResumen.value = !mostrarResumen.value;\n    };\n    const eliminarProducto = async id => {\n      const baseURL = `/api/eliminar/${id}`;\n      try {\n        const response = await axios.delete(baseURL);\n        if (response.status === 200) {\n          const index = libros.value.findIndex(libro => libro.id === id);\n          if (index !== -1) {\n            libros.value.splice(index, 1);\n          } else {\n            console.error(`No se encontró un libro con ID ${id} en la página actual`);\n          }\n          alert('Producto eliminado exitosamente');\n        } else {\n          alert(`Error al eliminar libro con ID ${id}. Estado de respuesta: ${response.status}`);\n        }\n      } catch (error) {\n        alert(`Error al eliminar libro con ID ${id}:`, error);\n        // Puedes manejar el error según tu lógica de la aplicación\n        throw error;\n      }\n    };\n    const cambiarPagina = pagina => {\n      if (pagina >= 1 && pagina <= totalPaginas.value) {\n        paginaActual.value = pagina;\n      }\n    };\n    const activeButton = ref('almacen');\n    const setActive = button => {\n      activeButton.value = button;\n      mostrarFormulario.value = button === 'agregar';\n    };\n    const __returned__ = {\n      get lastId() {\n        return lastId;\n      },\n      set lastId(v) {\n        lastId = v;\n      },\n      mostrarFormulario,\n      ocultarFormulario,\n      lnombre,\n      lpaginas,\n      leditorial,\n      lautor,\n      lfecha,\n      lisbn,\n      lidioma,\n      lgenero,\n      libros,\n      librosPorPagina,\n      paginaActual,\n      mostrarResumen,\n      obtenerLibros,\n      cargarLibros,\n      librosPaginados,\n      truncate,\n      totalPaginas,\n      handleSubmit,\n      toggleColumnas,\n      eliminarProducto,\n      cambiarPagina,\n      activeButton,\n      setActive,\n      ref,\n      computed,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","axios","librosPorPagina","lastId","mostrarFormulario","ocultarFormulario","value","lnombre","lpaginas","leditorial","lautor","lfecha","lisbn","lidioma","lgenero","libros","paginaActual","mostrarResumen","obtenerLibros","baseURL","response","get","data","error","console","log","cargarLibros","librosObtenidos","length","id","librosPaginados","inicio","fin","slice","truncate","text","substring","totalPaginas","Math","ceil","handleSubmit","alert","nuevoLibro","libro_nombre","libro_numpaginas","editorial","id_editorial","options","selectedIndex","autor","id_autor","nombre_autor","pais","id_pais","dataset","paisId","paisNombre","latitud","paisLatitud","longitud","paisLongitud","autor_genero","genero","autor_rating_promedio","ratingPromedio","cantidad_rating_autor","cantidadRating","cantidad_comentarios","cantidadComentarios","idioma","id_idioma","libro_fecha_publicacion","libro_rating_promedio","libro_review_counts","libro_ISBN","id_genero","post","status","push","lresumen","toggleColumnas","eliminarProducto","delete","index","findIndex","libro","splice","cambiarPagina","pagina","activeButton","setActive","button"],"sources":["C:/Users/Stiva/Documents/GitHub/Librerial-el-gran-poeta/backend/frontend/vue/libreria/src/components/Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid text-center full-height ingreso\">\r\n    <div class=\"row g-0\">\r\n      <div class=\"col\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"logoUsuario\">\r\n              <img src=\"../assets/usuario.png\" class=\"imgUsuario mt-5\" alt=\"...\" />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Juan Perez</h5>\r\n                <p class=\"card-text\">Jefe de Bodega</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row g-0\">\r\n          <div class=\"col\">\r\n            <div class=\"menuVertical\">\r\n              <div class=\"list-group mx-4\">\r\n                <button @click=\"mostrarFormulario = false; mostrarResumen = true; setActive('almacen')\" \r\n                        :aria-current=\"activeButton === 'almacen' ? 'true' : 'false'\" \r\n                        type=\"button\" \r\n                        class=\"list-group-item list-group-item-action\" \r\n                        :class=\"{ active: activeButton === 'almacen' }\">\r\n                  Almacén\r\n                </button>\r\n                <button @click=\"mostrarFormulario = true; mostrarResumen = true; setActive('agregar')\" \r\n                        :aria-current=\"activeButton === 'agregar' ? 'true' : 'false'\" \r\n                        type=\"button\" \r\n                        class=\"list-group-item list-group-item-action\"\r\n                        :class=\"{ active: activeButton === 'agregar' }\">\r\n                  Agregar Producto\r\n                </button>\r\n                <button @click=\"mostrarFormulario = false; toggleColumnas(); setActive('eliminar'); \"\r\n                        :aria-current=\"activeButton === 'eliminar' ? 'true' : 'false'\" \r\n                        type=\"button\" \r\n                        class=\"list-group-item list-group-item-action\"\r\n                        :class=\"{ active: activeButton === 'eliminar'}\">\r\n                  Eliminar Producto\r\n                </button>\r\n                <button @click=\"mostrarFormulario = false; mostrarResumen = true; setActive('informe')\"\r\n                        :aria-current=\"activeButton === 'informe' ? 'true' : 'false'\"  \r\n                        type=\"button\" \r\n                        class=\"list-group-item list-group-item-action\"\r\n                        :class=\"{ active: activeButton === 'informe' }\">\r\n                  Generar Informe de Movimientos\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-10 encabezado\">\r\n        <div v-if=\"mostrarFormulario && !ocultarFormulario\" class=\"con-derecho\">\r\n          <div class=\"contenido\">\r\n            <h3>Ingreso de Libros</h3>\r\n            <div class=\"d-flex justify-content-start\">\r\n              Campos obligatorios: <span class=\"text-danger\">* </span> \r\n            </div>\r\n            <br>\r\n            <form class=\"formulario-productos\" @submit.prevent=\"handleSubmit\">\r\n              <div class=\"form-group text-start\">\r\n                <label for=\"lnombre\" class=\"text-dark\"><span class=\"text-danger\">* </span> Ingrese nombre del libro: </label>\r\n                <input v-model=\"lnombre\" class=\"form-control\" type=\"text\" id=\"lnombre\" placeholder=\"Nombre Libro\"\r\n                   /><br />\r\n                <label for=\"lpaginas\" class=\"text-dark\"><span class=\"text-danger\">* </span> Ingrese número de páginas del libro: </label>\r\n                <input v-model=\"lpaginas\" class=\"form-control\" type=\"text\" id=\"lpaginas\" placeholder=\"Numero de páginas del Libro\"\r\n                 /><br />\r\n                <label for=\"leditorial\" class=\"text-dark\"><span class=\"text-danger\">* </span>Ingrese nombre de la editorial:</label>\r\n                <input v-model=\"leditorial\" class=\"form-control\" type=\"text\" id=\"leditorial\" placeholder=\"Nombre Editorial\"  /><br />\r\n                <label for=\"lautor\" class=\"text-dark\"><span class=\"text-danger\">* </span>Ingrese nombre del autor: </label>\r\n                <input v-model=\"lautor\" class=\"form-control\" type=\"text\" id=\"lautor\" placeholder=\"Nombre Autor\"\r\n                   /><br />\r\n                <label for=\"lfecha\" class=\"text-dark\"><span class=\"text-danger\">* </span> Ingrese fecha de publicación del libro: </label>\r\n                <input v-model=\"lfecha\" class=\"form-control\" type=\"text\" id=\"lfecha\" placeholder=\"Fecha de publicación del Libro\"\r\n                 /><br />\r\n                 <label for=\"lisbn\" class=\"text-dark\"><span class=\"text-danger\">* </span> Ingrese código ISBN del libro: </label>\r\n                <input v-model=\"lisbn\" class=\"form-control\" type=\"text\" id=\"lisbn\" placeholder=\"Fecha de publicación del Libro\"\r\n                 /><br />\r\n                <label for=\"lidioma\" class=\"text-dark\"><span class=\"text-danger\">* </span> Ingrese el idioma del libro: </label>\r\n                <input v-model=\"lidioma\" class=\"form-control\" type=\"text\" id=\"lidioma\" placeholder=\"Fecha de publicación del Libro\"\r\n                 /><br />\r\n                <label for=\"lgenero\" class=\"text-dark\"><span class=\"text-danger\">* </span>Ingrese Género del libro: </label>\r\n                <textarea v-model=\"lgenero\" class=\"form-control\" id=\"lgenero\" placeholder=\"Genero\"\r\n                  ></textarea><br>\r\n                <button type=\"submit\" class=\"btn btn-primary me-3\" value=\"Enviar\">Agregar</button>\r\n                <button @click=\"mostrarFormulario = false\" type=\"button\" class=\"btn btn-primary\"\r\n                  value=\"Cancelar\">Cancelar</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-4\">\r\n          <div class=\"mx-3\">\r\n\r\n            <h3>Lista de Libros</h3>\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Nombre</th>\r\n                  <th>Nro. Páginas</th>\r\n                  <th>Editorial</th>\r\n                  <th>Autor</th>\r\n                  <th>Fecha publicación</th>\r\n                  <th>Idioma</th>\r\n                  <th>Género</th>\r\n                  <th v-if=\"!mostrarResumen\">Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-if=\"librosPaginados.length === 0\">\r\n                  <td colspan=\"8\" class=\"text-center\">No hay libros ingresados</td>\r\n                </tr>\r\n                <tr v-for=\"libro in librosPaginados\" :key=\"libro.id_libro\">\r\n                  <td>{{ libro.id_libro }}</td>\r\n                  <td>{{ libro.libro_nombre }}</td>\r\n                  <td>{{ libro.libro_numpaginas }}</td>\r\n                  <td>{{ libro.editorial.editorial }}</td>\r\n                  <td>{{ libro.autor.nombre_autor }}</td>\r\n                  <td>{{ libro.libro_fecha_publicacion }}</td>\r\n                  <td>{{ libro.idioma.idioma }}</td>\r\n                  <td>{{ libro.genero.genero }}</td>\r\n                  <td v-if=\"!mostrarResumen\">\r\n                    <button @click=\"eliminarProducto(libro.id)\" type=\"button\" class=\"btn btn-danger\">Eliminar</button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Controles de paginación -->\r\n        <nav aria-label=\"Page navigation example\">\r\n          <ul class=\"pagination justify-content-center\">\r\n            <li class=\"page-item\" :class=\"{ 'disabled': paginaActual === 1 }\">\r\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"cambiarPagina(paginaActual - 1)\">Anterior</a>\r\n            </li>\r\n            <li class=\"page-item\" v-for=\"pagina in totalPaginas\" :key=\"pagina\"\r\n              :class=\"{ 'active': pagina === paginaActual }\">\r\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"cambiarPagina(pagina)\">{{ pagina }}</a>\r\n            </li>\r\n            <li class=\"page-item\" :class=\"{ 'disabled': paginaActual === totalPaginas }\">\r\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"cambiarPagina(paginaActual + 1)\">Siguiente</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { ref, computed, onMounted } from 'vue'\r\n  import axios from 'axios';\r\n\r\n  let lastId = 0; \r\n\r\n  const mostrarFormulario = ref(false)\r\n  const ocultarFormulario = mostrarFormulario.value = false\r\n  const lnombre = ref('')\r\n  const lpaginas = ref('')\r\n  const leditorial = ref('')\r\n  const lautor = ref('')\r\n  const lfecha = ref('')\r\n  const lisbn = ref('')\r\n  const lidioma = ref('')\r\n  const lgenero = ref('')\r\n  const libros = ref([])\r\n  const librosPorPagina = 8\r\n  const paginaActual = ref(1)\r\n  const mostrarResumen = ref(true)\r\n\r\n  const obtenerLibros = async () => {\r\n    const baseURL = '/api/home/'\r\n    try {\r\n      const response = await axios.get(baseURL);\r\n      return response.data; \r\n    } catch (error) {\r\n      console.log('Error al obtener libros:', error);\r\n      throw error; \r\n    }\r\n  };\r\n\r\n  const cargarLibros = async () => {\r\n    try {\r\n      const librosObtenidos = await obtenerLibros();\r\n      libros.value = librosObtenidos;\r\n      if (librosObtenidos.length > 0) {\r\n      lastId = librosObtenidos[librosObtenidos.length - 1].id; \r\n      }\r\n    } catch (error) {\r\n      console.log('Error al cargar libros:', error);\r\n    }\r\n  };\r\n\r\n  onMounted(() => {\r\n    cargarLibros();\r\n  }) \r\n    \r\n\r\n  const librosPaginados = computed(() => {\r\n    const inicio = (paginaActual.value - 1) * librosPorPagina\r\n    const fin = paginaActual.value * librosPorPagina\r\n    return libros.value.slice(inicio, fin)\r\n  })\r\n\r\n  const truncate = (text, length) => {\r\n    if (text) {\r\n      return text.length > length ? text.substring(0, length) + '...' : text;\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const totalPaginas = computed(() => Math.ceil(libros.value.length / librosPorPagina))\r\n\r\n  const handleSubmit = async () => {\r\n    \r\n    if (!lnombre.value || !leditorial.value || !lpaginas.value || !lfecha.value || !lisbn.value || !lidioma.value || !lautor.value || !lgenero.value) {\r\n      alert('Ingrese todos los campos')\r\n      return\r\n    }\r\n\r\n    const nuevoLibro = {\r\n      id: lastId + 1,\r\n      libro_nombre: lnombre.value,\r\n      libro_numpaginas: lpaginas.value,\r\n      editorial: {\r\n        id_editorial: leditorial.value,  \r\n        editorial: leditorial.options[leditorial.selectedIndex].text  \r\n      },\r\n      autor: {\r\n        id_autor: lautor.value,  \r\n        nombre_autor: lautor.options[lautor.selectedIndex].text,  \r\n        pais: {\r\n          id_pais: lautor.options[lautor.selectedIndex].dataset.paisId,  \r\n          pais: lautor.options[lautor.selectedIndex].dataset.paisNombre,  \r\n          latitud: lautor.options[lautor.selectedIndex].dataset.paisLatitud,  \r\n          longitud: lautor.options[lautor.selectedIndex].dataset.paisLongitud  \r\n        },\r\n        autor_genero: lautor.options[lautor.selectedIndex].dataset.genero,  \r\n        autor_rating_promedio: lautor.options[lautor.selectedIndex].dataset.ratingPromedio,  \r\n        cantidad_rating_autor: lautor.options[lautor.selectedIndex].dataset.cantidadRating,  \r\n        cantidad_comentarios: lautor.options[lautor.selectedIndex].dataset.cantidadComentarios  \r\n      },\r\n      idioma: {\r\n        id_idioma: lidioma.value,  \r\n        idioma: lidioma.options[lidioma.selectedIndex].text  \r\n      },\r\n      libro_fecha_publicacion: lfecha.value,\r\n      libro_rating_promedio: 0,  \r\n      libro_review_counts: 0,  \r\n      libro_ISBN: lisbn.value, \r\n      id_editorial: leditorial.value,  \r\n      id_autor: lautor.value,  \r\n      id_idioma: lidioma.value,  \r\n      id_genero: lgenero.value,\r\n    };\r\n\r\n    try {\r\n      const baseURL = `/api/agregar/${id}`\r\n      const response = await axios.post(baseURL, nuevoLibro);\r\n      if (response.status === 201) {\r\n        alert('Libro guardado exitosamente');\r\n        libros.value.push(nuevoLibro)\r\n    \r\n        mostrarFormulario.value = false\r\n    \r\n        lnombre.value = ''\r\n        lpaginas.value = ''\r\n        leditorial.value = ''\r\n        lautor.value = ''\r\n        lfecha.value = ''\r\n        lidioma.value = ''\r\n        lresumen.value = ''\r\n      } \r\n      // Ajustar la página actual para mostrar el nuevo libro si está en una nueva página\r\n      if (libros.value.length > paginaActual.value * librosPorPagina) {\r\n        paginaActual.value = totalPaginas.value\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al guardar el libro:', error);\r\n      alert('Ocurrió un error al guardar el libro. Por favor, inténtelo de nuevo.');\r\n    }\r\n  }\r\n\r\n  const toggleColumnas = () => {\r\n    mostrarResumen.value = !mostrarResumen.value;\r\n  }\r\n\r\n  const eliminarProducto = async (id) => {\r\n    const baseURL = `/api/eliminar/${id}`\r\n    try {\r\n      const response = await axios.delete(baseURL); \r\n      if (response.status === 200) {\r\n        const index = libros.value.findIndex(libro => libro.id === id);\r\n        if (index !== -1) {\r\n          libros.value.splice(index, 1);\r\n        } else {\r\n          console.error(`No se encontró un libro con ID ${id} en la página actual`);\r\n        }\r\n        alert('Producto eliminado exitosamente');\r\n      } else {\r\n        alert(`Error al eliminar libro con ID ${id}. Estado de respuesta: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n        alert(`Error al eliminar libro con ID ${id}:`, error);\r\n        // Puedes manejar el error según tu lógica de la aplicación\r\n        throw error;\r\n    }\r\n  };\r\n\r\n  const cambiarPagina = (pagina) => {\r\n    if (pagina >= 1 && pagina <= totalPaginas.value) {\r\n      paginaActual.value = pagina\r\n    }\r\n  }\r\n\r\n  const activeButton = ref('almacen')\r\n  const setActive = (button) => {\r\n    activeButton.value = button;\r\n    mostrarFormulario.value = button === 'agregar';\r\n  }\r\n</script>\r\n\r\n<style>\r\n  html,\r\n  body {\r\n    padding: 0px;\r\n    margin: 0px;\r\n    width: 100%;\r\n    height: 100vh;\r\n  }\r\n\r\n  td {\r\n    text-align: center; \r\n    vertical-align: middle;\r\n    white-space: pre-wrap; \r\n    max-width: 60px; \r\n    overflow-wrap: break-word;\r\n  }\r\n\r\n  .imgUsuario {\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 75px;\r\n    position: relative;\r\n    margin: 0px 0px;\r\n  }\r\n\r\n  .menuVertical {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  #crearProductos {\r\n    max-width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  #exampleModal {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .modal {\r\n    background: rgba(177, 161, 161, 0.322);\r\n    backdrop-filter: blur(10px);\r\n  }\r\n\r\n  .con-derecho {\r\n    background-color: #ffffff;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    width: 950px;\r\n    margin: auto;\r\n    max-width: 100%;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    margin-top: 50px;\r\n  }\r\n\r\n  .encabezado {\r\n    background-color: #f1f2f7;\r\n  }\r\n\r\n  .ingreso {\r\n    background-color: #ffffff;\r\n  }\r\n\r\n  .arriba {\r\n    background-color: #ffffff;\r\n  }\r\n\r\n  .full-height {\r\n    min-height: 100vh;\r\n  }\r\n\r\n  .table {\r\n    width: 1450px;\r\n    margin: auto;\r\n    max-width: 100%;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .pagination {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .page-item.disabled .page-link {\r\n    pointer-events: none;\r\n    cursor: not-allowed;\r\n  }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}